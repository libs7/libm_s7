package(default_visibility = ["//visibility:public"])

load("@rules_cc//cc:defs.bzl",
     "cc_library",
     # "cc_shared_library"
     )

load("@libs7//plugin:MACROS.bzl", "s7_plugin", "s7_library")

SRCS          = []
DEPS          = []
INCLUDE_PATHS = []
COPTS = [
    "-Wno-unused-parameter",
    # "-I$(@)/src"
]
DEFINES       = []
LINKOPTS      = []

# TOOLCHAINS = ["//:repo_paths"]

################################################################
s7_plugin(
    name  = "m_s7",
    # linkstatic = True,
    # alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = ["//lib/clibgen:libm_s7.c"],
    deps  = DEPS,
    copts = COPTS,
    linkopts = LINKOPTS  + select({
        "@platforms//os:linux": ["-lrt"],
        "//conditions:default": []
    }),
    local_defines = DEFINES,
    # toolchains = TOOLCHAINS
)

cc_shared_library(
    name  = "m_s7_dso",  # create libm_s7.{dylib,so}
    shared_lib_name = select({
        "@platforms//os:macos": "libm_s7.dylib",
        "@platforms//os:linux": "libm_s7.so",
        # "@platforms//os:windows": "libm_s7.dll",
        "//conditions:default": "libm_s7.so"
    }),
    deps = [":m_s7"]
)

# clibgen_runner(
#     name = "libm_s7_runbin",
#     args = ["--script", "$(location libm_clibgen.scm)"],
#     srcs = [":libm_clibgen.scm"],
#     outs = [":libm_s7.c"]
# )
